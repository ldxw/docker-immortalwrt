name: Build & Push ImmortalWrt

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: "ImmortalWrt version (default: 24.10.0-rc3)"
        required: false
        default: "24.10.0-rc3"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]

    env:
      IMMORTALWRT_VERSION: ${{ github.event.inputs.version || '24.10.0-rc3' }}

    outputs:
      date: ${{ steps.vars.outputs.date_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set date tag
      id: vars
      run: echo "date_tag=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

    - name: Prepare rootfs for ${{ matrix.arch }}
      run: |
        mkdir -p docker/${{ matrix.arch }}
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          wget -O docker/${{ matrix.arch }}/rootfs.tar.gz https://downloads.immortalwrt.org/releases/${IMMORTALWRT_VERSION}/targets/armsr/armv8/immortalwrt-${IMMORTALWRT_VERSION}-armsr-armv8-rootfs.tar.gz
        elif [ "${{ matrix.arch }}" = "x86_64" ]; then
          wget -O docker/${{ matrix.arch }}/rootfs.tar.gz https://downloads.immortalwrt.org/releases/${IMMORTALWRT_VERSION}/targets/x86/64/immortalwrt-${IMMORTALWRT_VERSION}-x86-64-rootfs.tar.gz
        fi
        tar -xf docker/${{ matrix.arch }}/rootfs.tar.gz -C docker/${{ matrix.arch }}
        mv docker/${{ matrix.arch }}/rootfs.tar.gz docker/${{ matrix.arch }}/rootfs.tar

    - name: Build & Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./docker/${{ matrix.arch }}
        file: ./docker/${{ matrix.arch }}/Dockerfile
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ github.actor }}/immortalwrt:${{ matrix.arch }}
          docker.io/${{ secrets.DOCKERHUB_USERNAME }}/immortalwrt:${{ matrix.arch }}

  manifest:
    needs: build
    runs-on: ubuntu-latest

    env:
      IMMORTALWRT_VERSION: ${{ github.event.inputs.version || '24.10.0-rc3' }}

    steps:
    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and push multiarch manifest
      run: |
        docker buildx imagetools create           --tag ghcr.io/${{ github.actor }}/immortalwrt:latest           --tag ghcr.io/${{ github.actor }}/immortalwrt:${{ env.IMMORTALWRT_VERSION }}           ghcr.io/${{ github.actor }}/immortalwrt:arm64           ghcr.io/${{ github.actor }}/immortalwrt:x86_64

    - name: Push README to GHCR
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        repository: ghcr.io/${{ github.repository_owner }}/immortalwrt
        readme-filepath: ./README.md
        registry: ghcr.io

    - name: Push README to Docker Hub
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ secrets.DOCKERHUB_USERNAME }}/immortalwrt
        readme-filepath: ./README.md
        short-description: "Multi-arch ImmortalWrt Docker image"

    - name: Push README to GHCR
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        repository: ghcr.io/${{ github.repository_owner }}/immortalwrt
        readme-filepath: ./README.md
        registry: ghcr.io

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.IMMORTALWRT_VERSION }}
        name: ImmortalWrt ${{ env.IMMORTALWRT_VERSION }}
        body: |
          ðŸŽ‰ Multi-arch Docker image for ImmortalWrt ${{ env.IMMORTALWRT_VERSION }} has been built.

          **Tags Pushed:**
          - ghcr.io/${{ github.actor }}/immortalwrt:latest
          - ghcr.io/${{ github.actor }}/immortalwrt:${{ env.IMMORTALWRT_VERSION }}
          - ghcr.io/${{ github.actor }}/immortalwrt:arm64
          - ghcr.io/${{ github.actor }}/immortalwrt:x86_64

          ðŸ§± Auto-generated from commit: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
